apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    compileOptions {
        // For retrolambda. Need to install JDK8 and set JAVA8_HOME variable
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.futurice.rxmvvmdi"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        // Android data-binding
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile (
            'junit:junit:4.12',
            'org.mockito:mockito-core:2.0.5-beta'
    )
    compile (
            'com.android.support:appcompat-v7:23.3.0',

            // Rx
            'io.reactivex:rxjava:1.1.+',
            'io.reactivex:rxandroid:1.1.+',
            'io.reactivex:rxjava-math:1.0.+',

            // DI
            'com.google.dagger:dagger:2.2',

            // Java8 date APIs
            'com.jakewharton.threetenabp:threetenabp:1.0.+',

            // Retrofit and GSON for backend calls, and stetho for debugging them
            'com.squareup.retrofit2:retrofit:2.0.+',
            'com.squareup.retrofit2:converter-gson:2.0.+',
            'com.squareup.retrofit2:adapter-rxjava:2.0.+',
            'com.facebook.stetho:stetho:1.3.+',
            'com.facebook.stetho:stetho-okhttp3:1.3.+',
    )
    // DI
    provided "com.google.dagger:dagger-compiler:2.2"
}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}